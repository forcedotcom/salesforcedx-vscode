name: Publish Types Package to npm
on:
  release:
    # This limits the workflow to releases that are not pre-releases
    # From the docs: A release was published, or a pre-release was changed to a release.
    types: [released]
  # Button for publishing main branch in case there is a failure on the release.
  workflow_dispatch:

jobs:
  validate-version:
    name: 'Validate Release Version'
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_VERSION: ${{ steps.getPackageVersion.outputs.version }}
      RELEASE_VERSION: ${{ steps.getReleaseVersion.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Get Release Version
        id: getReleaseVersion
        run: |
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          # Remove 'v' prefix if present (e.g., v64.4.0 -> 64.4.0)
          RELEASE_VERSION="${RELEASE_TAG#v}"
          echo "version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT
          echo "Release version is ${RELEASE_VERSION}"

      - name: Get Package Version
        id: getPackageVersion
        run: |
          PACKAGE_VERSION=$(node -pe "require('./packages/salesforcedx-vscode-services-types/package.json').version")
          echo "version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
          echo "Package version is ${PACKAGE_VERSION}"

      - name: Validate Versions Match
        run: |
          if [ "${{ steps.getReleaseVersion.outputs.version }}" != "${{ steps.getPackageVersion.outputs.version }}" ]; then
            echo "ERROR: Release version (${{ steps.getReleaseVersion.outputs.version }}) does not match package version (${{ steps.getPackageVersion.outputs.version }})"
            exit 1
          fi
          echo "âœ“ Version validation passed"

  publish:
    name: 'Publish to npm'
    needs: validate-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION || 'lts/*' }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install monorepo dependencies
        run: npm ci

      - name: Compile parent services package
        run: npm run compile -w packages/salesforcedx-vscode-services

      - name: Build and prepare types package
        run: npm run prepublishOnly
        working-directory: packages/salesforcedx-vscode-services-types

      - name: Publish to npm
        run: npm publish
        working-directory: packages/salesforcedx-vscode-services-types
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
