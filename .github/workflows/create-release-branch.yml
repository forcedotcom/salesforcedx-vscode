name: Create Release Branch

on:
  repository_dispatch:
    types: create_release_branch
  schedule:
  - cron: '0 13 * * 1'
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Select the release type (default is minor)'
        required: true
        default: 'minor'
        type: choice
        options:
          - minor
          - major
          - patch
          - beta

jobs:

  create_branch:
    name: 'Create Branch'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.output1.outputs.version }}
      release_type: ${{ steps.output2.outputs.releaseType }}
      branch: ${{ steps.output3.outputs.branch }}
    env:
      RELEASE_TYPE: ${{ github.event.inputs.releaseType || 'minor' }}

    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.13.x'
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: 'develop'
        ssh-strict: false
        token: ${{ secrets.SF_IDEE_BOT_GITHUB_TOKEN }}
    - uses: ./.github/actions/gitConfig
      with:
        email: ${{ secrets.GH_EMAIL }}
    - name: Set NPM at the correct version for Lerna
      run: npm install -g npm@8.12.1
    - run: npm ci
    - run: npm install -g shelljs && npm install -g lerna
    - name: Create and Push the Release Branch
      run: |
        echo `Creating a ${RELEASE_TYPE} release from branch ${releaseBranchName}`
        node scripts/create-release-branch.js
    - id: output1
      run: echo `releaseType=${{ github.event.inputs.releaseType || 'minor' }}` >> $GITHUB_OUTPUT
    - id: output2
      run: echo `version=${nextversion}` >> $GITHUB_OUTPUT
    - id: output3
      run: echo `branch=${releaseBranchName}` >> $GITHUB_OUTPUT

  notification_on_success:
    needs: create_branch
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Announce success
        uses: slackapi/slack-github-action@v1.22.0
        with:
          payload: |
            {
              "text": "Release branch v${{ needs.create_branch.outputs.version }} type ${{ needs.create_branch.outputs.release_type }} successfully created",
              "event": "${{ github.event.repository.html_url }}/branches/${{ needs.create_branch.outputs.branch }}",
              "repo": "${{ github.event.repository.name }}",
              "result": "Success"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.VSCODE_SLACK_WEBHOOK }}

  notification_on_failure:
    needs: create_branch
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    steps:
      - name: Announce failure
        uses: slackapi/slack-github-action@v1.22.0
        with:
          payload: |
            {
              "text": "Release branch v${{ needs.create_branch.outputs.version }} unsuccessfully created",
              "event": "Create Release Branch, run: ${{ github.event.workflow_run.html_url }}",
              "repo": "${{ github.event.repository.name }}",
              "result": "Failure"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.IDEE_RELEASE_ALERT_SLACK_WEBHOOK }}

