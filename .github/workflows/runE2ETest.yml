name: Run E2E Test
on:
  workflow_call:
    inputs:
      automationBranch:
        description: 'Set the branch to use for automation tests'
        required: false
        default: 'main'
        type: string
      automationRepo:
        description: 'Set the repo to use for automation tests'
        required: false
        default: 'salesforcedx-vscode-automation-tests'
        type: string
      testToRun:
        description: 'Run this E2E test'
        required: false
        type: string
      vscodeVersion:
        description: 'VSCode Version'
        required: false
        default: 'stable'
        type: string
      runId:
        description: 'Run ID of the workflow run that created the vsixes'
        required: false
        type: string
      os:
        description: 'Operating System(s) to run the E2E tests on'
        required: false
        default: '["macos-latest", "ubuntu-latest", "windows-latest"]'
        type: string
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
        nodeVersion:
          - 18.18.2
        vscodeVersion:
          - ${{ inputs.vscodeVersion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ./salesforcedx-vscode
          ref: ${{ github.event.ref }}
      - name: Download extension vsixes
        run: |
          mkdir ./extensions
          pwd
          gh run download ${{ inputs.runId }} -D ./extensions
          mv ./extensions/*/* ./extensions/
        working-directory: salesforcedx-vscode
        env:
          GITHUB_TOKEN: ${{ secrets.IDEE_GH_TOKEN }}
      - name: Display downloaded vsix files
        run: ls -R ./salesforcedx-vscode/extensions
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodeVersion }}
          cache: npm
          cache-dependency-path: |
            salesforcedx-vscode/package-lock.json
            ${{ inputs.automationRepo }}/package-lock.json
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Clone automation tests
        uses: actions/checkout@v4
        with:
          repository: forcedotcom/${{ inputs.automationRepo }}
          path: ${{ inputs.automationRepo }}
          ref: ${{ inputs.automationBranch }}
      - name: Install Test Dependencies
        run: |
          npm install
        working-directory: ${{ inputs.automationRepo }}
      - name: Install the Salesforce CLI
        run: npm install -g @salesforce/cli
      - name: Verify CLI
        shell: bash
        run: |
          set -e
          sf version
          SF_CLI_VERSION=$(sf version)
          if [[ ((`echo $SF_CLI_VERSION | grep -c "@salesforce/cli/"` > 0))]]
          then
            echo "@salesforce/cli installed -" $SF_CLI_VERSION
          else
            echo "The @salesforce/cli installation could not be verified"
            exit 1
          fi
      - name: Set THROTTLE_FACTOR for macOS and Linux
        if: matrix.os != 'windows-latest'
        run: echo "THROTTLE_FACTOR=1" >> $GITHUB_ENV
      - name: Set THROTTLE_FACTOR for Windows
        if: matrix.os == 'windows-latest'
        run: echo "THROTTLE_FACTOR=5" >> $GITHUB_ENV
      - name: Run headless test
        uses: coactions/setup-xvfb@b6b4fcfb9f5a895edadc3bc76318fae0ac17c8b3
        with:
          run: |
            npm run automation-tests
          working-directory: ${{ inputs.automationRepo }}
        env:
          VSCODE_VERSION: ${{ matrix.vscodeVersion }}
          SPEC_FILES: ${{ inputs.testToRun }}
          SFDX_AUTH_URL: ${{ secrets.SFDX_AUTH_URL_E2E }}
          ORG_ID: ${{ secrets.ORG_ID_E2E }}
          THROTTLE_FACTOR: ${{ env.THROTTLE_FACTOR }}
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots-${{ inputs.testToRun }}-${{ matrix.os }}
          path: ./${{ inputs.automationRepo }}/screenshots
