name: VSCode Publish

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
    outputs:
      result:
        description: Set to published if the push to the VSCode marketplace was successful
        value: ${{ jobs.publish.outputs.result }}
      status: 
        description: Set to complete if all tasks associated with the workflow were successful.
        value: ${{ jobs.mergeDevelop.outputs.status }}

# There are two outputs that are a result of running this workflow
# The steps.publsh.outputs.result is an indicator that the pulish to the vscode marketplace succeeded.
# The steps.mergeDevelop.outputs.status is an indicator that all the publish steps completed.
jobs: 
  updating-sha-for-publish: 
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.13.x'
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'
          token: ${{ secrets.IDEE_GH_TOKEN }}
      - uses: ./.github/actions/gitConfig
        with:
          email: ${{ secrets.IDEE_GH_EMAIL }}
      - run: npm ci
      - run: npm run vscode:sha256
      - run: scripts/concatenate-sha256.js
      - run: rm ./SHA256
      - run: |
              git add SHA256.md
              git commit -m "chore: updated SHA256 v${RELEASE_VERSION}"
      - run: echo "SHA256.md successfully generated and committed."
      - run: git push origin main
  publish:
    needs: ['updating-sha-for-publish']
    outputs: 
      result: ${{ steps.vsce.outputs.result }}
    runs-on: ubuntu-latest
    env: 
      VSCE_PERSONAL_ACCESS_TOKEN: ${{ secrets.VSCE_PERSONAL_ACCESS_TOKEN }}
    steps: 
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.13.x'
      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.version }}
          path: ./extensions
      - name: Display downloaded vsix files
        run: ls -R ./extensions
      - run: npm ci
      - run: find ./extensions -type f -name "*.vsix" -exec npx vsce publish --pat ${{ env.VSCE_PERSONAL_ACCESS_TOKEN }} --packagePath {} \;
      - id: vsce
        run: | 
          echo "result=published" >> $GITHUB_OUTPUT
      - run: echo "SUCCESSFULLY published"
  gitTag: 
    needs: ['publish']
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'
          token: ${{ secrets.IDEE_GH_TOKEN }}
      - uses: ./.github/actions/gitConfig
        with:
          email: ${{ secrets.IDEE_GH_EMAIL }}
      - run: |
            git tag v${{ inputs.version }}
            git push origin v${{ inputs.version }}
  githubRelease:
    needs: [publish]
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'
          token: ${{ secrets.IDEE_GH_TOKEN }}
      - uses: ./.github/actions/gitConfig
        with:
          email: ${{ secrets.IDEE_GH_EMAIL }}
      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.version }}
          path: ./extensions
      - name: Display downloaded vsix files
        run: ls -R ./extensions
      - run: gh release create v${{ inputs.version }} ./extensions/*.vsix --title "Release v${{ inputs.version }}" --notes-file ./packages/salesforcedx-vscode/CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.IDEE_GH_TOKEN }}

  mergeDevelop:
    needs: [githubRelease]
    runs-on: ubuntu-latest
    outputs: 
      status: ${{ steps.complete.outputs.status }}
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'
          token: ${{ secrets.IDEE_GH_TOKEN }}
      - uses: ./.github/actions/gitConfig
        with:
          email: ${{ secrets.IDEE_GH_EMAIL }}
      - run: |
          git checkout develop
          git pull
          git merge main --commit --no-edit
          git push origin develop
      - id: complete
        run: |
         echo "status=complete" >> $GITHUB_OUTPUT
      - id: finish
        run: |
         echo "VSCode Publish Success"
         