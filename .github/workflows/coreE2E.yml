name: Core End to End Tests

on:
  workflow_dispatch:
    inputs:
      anInitialSuite:
        description: 'Verify Extensions'
        required: false
        default: true
        type: boolean
      authentication:
        description: 'Authentication'
        required: false
        default: true
        type: boolean
      createProject:
        description: 'Create Project'
        required: false
        default: true
        type: boolean
      snippets:
        description: 'Apex and LWC Snippets'
        required: false
        default: true
        type: boolean
      sObjectsDefinitions:
        description: 'sObjects Definitions'
        required: false
        default: true
        type: boolean
      templates:
        description: 'Create Commands'
        required: false
        default: true
        type: boolean
      sfdxProjectJson:
        description: 'sfdx-project.json'
        required: false
        default: true
        type: boolean
      vscodeVersion:
        description: 'VSCode Version'
        required: false
        default: 'latest'
        type: string
      runId:
        description: 'Run ID of the workflow run that created the vsixes'
        required: true
        type: string

  workflow_call:
    inputs:
      anInitialSuite:
        description: 'Verify Extensions'
        required: false
        default: true
        type: boolean
      authentication:
        description: 'Authentication'
        required: false
        default: true
        type: boolean
      createProject:
        description: 'Create Project'
        required: false
        default: true
        type: boolean
      snippets:
        description: 'Apex and LWC Snippets'
        required: false
        default: true
        type: boolean
      sObjectsDefinitions:
        description: 'sObjects Definitions'
        required: false
        default: true
        type: boolean
      templates:
        description: 'Create Commands'
        required: false
        default: true
        type: boolean
      sfdxProjectJson:
        description: 'sfdx-project.json'
        required: false
        default: true
        type: boolean
      vscodeVersion:
        description: 'VSCode Version'
        required: false
        default: 'latest'
        type: string
      runId:
        description: 'Run ID of the workflow run that created the vsixes'
        required: false
        type: string

jobs:
  anInitialSuite:
    if: ${{ inputs.anInitialSuite }}
    uses: ./.github/workflows/runE2ETest.yml
    secrets: inherit
    with:
      testToRun: 'anInitialSuite.e2e.js'
      vscodeVersion: ${{ inputs.vscodeVersion }}
      runId: ${{ inputs.runId }}

  authentication:
    if: ${{ inputs.authentication }}
    uses: ./.github/workflows/runE2ETest.yml
    secrets: inherit
    with:
      testToRun: 'authentication.e2e.js'
      vscodeVersion: ${{ inputs.vscodeVersion }}
      runId: ${{ inputs.runId }}

  createProject:
    if: ${{ inputs.createProject }}
    uses: ./.github/workflows/runE2ETest.yml
    secrets: inherit
    with:
      testToRun: 'createProject.e2e.js'
      vscodeVersion: ${{ inputs.vscodeVersion }}
      runId: ${{ inputs.runId }}

  snippets:
    if: ${{ inputs.snippets }}
    uses: ./.github/workflows/runE2ETest.yml
    secrets: inherit
    with:
      testToRun: 'snippets.e2e.js'
      vscodeVersion: ${{ inputs.vscodeVersion }}
      runId: ${{ inputs.runId }}

  sObjectsDefinitions:
    if: ${{ inputs.sObjectsDefinitions }}
    uses: ./.github/workflows/runE2ETest.yml
    secrets: inherit
    with:
      testToRun: 'sObjectsDefinitions.e2e.js'
      vscodeVersion: ${{ inputs.vscodeVersion }}
      runId: ${{ inputs.runId }}

  templates:
    if: ${{ inputs.templates }}
    uses: ./.github/workflows/runE2ETest.yml
    secrets: inherit
    with:
      testToRun: 'templates.e2e.js'
      vscodeVersion: ${{ inputs.vscodeVersion }}
      runId: ${{ inputs.runId }}

  sfdxProjectJson:
    if: ${{ inputs.sfdxProjectJson }}
    uses: ./.github/workflows/runE2ETest.yml
    secrets: inherit
    with:
      testToRun: 'sfdxProjectJson.e2e.js'
      vscodeVersion: ${{ inputs.vscodeVersion }}
      runId: ${{ inputs.runId }}

  slack_success_notification:
    if: ${{ success() }}
    needs: [anInitialSuite, authentication, createProject, snippets, sObjectsDefinitions, templates, sfdxProjectJson]
    uses: ./.github/workflows/slackNotification.yml
    secrets: inherit
    with:
      title: 'Core E2E Tests'
      vscodeVersion: ${{ inputs.vscodeVersion }}
      testsBranch: ${{ github.ref }}
      summary: '\n- An Initial Suite: ${{ needs.anInitialSuite.result }}\n- Authentication: ${{ needs.authentication.result }}\n- Create Project: ${{ needs.createProject.result }}\n- Snippets: ${{ needs.snippets.result }}\n- SObjects Definitions: ${{ needs.sObjectsDefinitions.result }}\n- Templates: ${{ needs.templates.result }}\n- SFDX Project Json: ${{ needs.sfdxProjectJson.result}}'
      result: 'All the tests passed.'
      workflow: 'actions/runs/${{ github.run_id }}'
      type: 'e2e'

  slack_failure_notification:
    if: ${{ failure() }}
    needs: [anInitialSuite, authentication, createProject, snippets, sObjectsDefinitions, templates, sfdxProjectJson]
    uses: ./.github/workflows/slackNotification.yml
    secrets: inherit
    with:
      title: 'Core E2E Tests'
      vscodeVersion: ${{ inputs.vscodeVersion }}
      testsBranch: ${{ github.ref }}
      summary: '\n- An Initial Suite: ${{ needs.anInitialSuite.result }}\n- Authentication: ${{ needs.authentication.result }}\n- Create Project: ${{ needs.createProject.result }}\n- Snippets: ${{ needs.snippets.result }}\n- SObjects Definitions: ${{ needs.sObjectsDefinitions.result }}\n- Templates: ${{ needs.templates.result }}\n- SFDX Project Json: ${{ needs.sfdxProjectJson.result}}'
      result: 'Not all the tests passed.'
      workflow: 'actions/runs/${{ github.run_id }}'
      type: 'e2e'

  slack_cancelled_notification:
    if: ${{ cancelled() }}
    needs: [anInitialSuite, authentication, createProject, snippets, sObjectsDefinitions, templates, sfdxProjectJson]
    uses: ./.github/workflows/slackNotification.yml
    secrets: inherit
    with:
      title: 'Core E2E Tests'
      vscodeVersion: ${{ inputs.vscodeVersion }}
      testsBranch: ${{ github.ref }}
      summary: '\n- An Initial Suite: ${{ needs.anInitialSuite.result }}\n- Authentication: ${{ needs.authentication.result }}\n- Create Project: ${{ needs.createProject.result }}\n- Snippets: ${{ needs.snippets.result }}\n- SObjects Definitions: ${{ needs.sObjectsDefinitions.result }}\n- Templates: ${{ needs.templates.result }}\n- SFDX Project Json: ${{ needs.sfdxProjectJson.result}}'
      result: 'The workflow was cancelled.'
      workflow: 'actions/runs/${{ github.run_id }}'
      type: 'e2e'
