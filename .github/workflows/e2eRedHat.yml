name: End to End Tests - Redhat
on:
  workflow_run:
    workflows:
      - Nightly Build Develop
      - Test, Build, and Release
      - Create and Test Beta Release Branch
    types:
      - completed

  workflow_dispatch:
    inputs:
      automationBranch:
        description: 'Set the branch to use for automation tests in ESM'
        required: false
        default: 'main'
        type: string
      apexE2ETests:
        description: 'Apex E2E Tests'
        required: false
        default: true
        type: boolean
      coreE2ETests:
        description: 'Core E2E Tests'
        required: false
        default: true
        type: boolean
      deployAndRetrieveE2ETests:
        description: 'Deploy and Retrieve E2E Tests'
        required: false
        default: true
        type: boolean
      lspE2ETests:
        description: 'LSP E2E Tests'
        required: false
        default: true
        type: boolean
      lwcE2ETests:
        description: 'LWC E2E Tests'
        required: false
        default: true
        type: boolean
      soqlE2ETests:
        description: 'SOQL E2E Tests'
        required: false
        default: true
        type: boolean
      vscodeVersion:
        description: 'VSCode Version for ESM branches'
        required: false
        default: 'stable'
        type: string
      runId:
        description: 'Run ID of the workflow run that created the vsixes'
        required: true
        type: string

jobs:
  Apex:
    if: ${{ inputs.apexE2ETests || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    uses: ./.github/workflows/apexE2EredHat.yml
    secrets: inherit
    with:
      automationBranch: ${{ inputs.automationBranch || 'main' }}
      vscodeVersion: ${{ inputs.vscodeVersion || 'stable' }}
      runId: ${{ inputs.runId || github.event.workflow_run.id }}

  Core:
    if: ${{ inputs.coreE2ETests || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    uses: ./.github/workflows/coreE2E.yml
    secrets: inherit
    with:
      automationBranch: ${{ inputs.automationBranch || 'main' }}
      vscodeVersion: ${{ inputs.vscodeVersion || 'stable' }}
      runId: ${{ inputs.runId || github.event.workflow_run.id }}

  DeployAndRetrieve:
    if: ${{ inputs.deployAndRetrieveE2ETests || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    uses: ./.github/workflows/deployRetrieveE2E.yml
    secrets: inherit
    with:
      automationBranch: ${{ inputs.automationBranch || 'main' }}
      vscodeVersion: ${{ inputs.vscodeVersion || 'stable' }}
      runId: ${{ inputs.runId || github.event.workflow_run.id }}

  LSP:
    if: ${{ inputs.lspE2ETests || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    uses: ./.github/workflows/lspE2E.yml
    secrets: inherit
    with:
      automationBranch: ${{ inputs.automationBranch || 'main' }}
      vscodeVersion: ${{ inputs.vscodeVersion || 'stable' }}
      runId: ${{ inputs.runId || github.event.workflow_run.id }}

  LWC:
    if: ${{ inputs.lwcE2ETests || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    uses: ./.github/workflows/lwcE2E.yml
    secrets: inherit
    with:
      automationBranch: ${{ inputs.automationBranch || 'main' }}
      vscodeVersion: ${{ inputs.vscodeVersion || 'stable' }}
      runId: ${{ inputs.runId || github.event.workflow_run.id }}

  SOQL:
    if: ${{ inputs.soqlE2ETests || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    uses: ./.github/workflows/soqlE2E.yml
    secrets: inherit
    with:
      automationBranch: ${{ inputs.automationBranch || 'main' }}
      vscodeVersion: ${{ inputs.vscodeVersion || 'stable' }}
      runId: ${{ inputs.runId || github.event.workflow_run.id }}

  Apex_min_vscode_version:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    uses: ./.github/workflows/apexE2EredHat.yml
    secrets: inherit
    with:
      automationBranch: 'main'
      vscodeVersion: '1.86.0'
      runId: ${{ github.event.workflow_run.id }}

  Core_min_vscode_version:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    uses: ./.github/workflows/coreE2E.yml
    secrets: inherit
    with:
      automationBranch: 'main'
      vscodeVersion: '1.86.0'
      runId: ${{ github.event.workflow_run.id }}

  DeployAndRetrieve_min_vscode_version:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    uses: ./.github/workflows/deployRetrieveE2E.yml
    secrets: inherit
    with:
      automationBranch: 'main'
      vscodeVersion: '1.86.0'
      runId: ${{ github.event.workflow_run.id }}

  LSP_min_vscode_version:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    uses: ./.github/workflows/lspE2E.yml
    secrets: inherit
    with:
      automationBranch: 'main'
      vscodeVersion: '1.86.0'
      runId: ${{ github.event.workflow_run.id }}

  LWC_min_vscode_version:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    uses: ./.github/workflows/lwcE2E.yml
    secrets: inherit
    with:
      automationBranch: 'main'
      vscodeVersion: '1.86.0'
      runId: ${{ github.event.workflow_run.id }}

  SOQL_min_vscode_version:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    uses: ./.github/workflows/soqlE2E.yml
    secrets: inherit
    with:
      automationBranch: 'main'
      vscodeVersion: '1.86.0'
      runId: ${{ github.event.workflow_run.id }}
