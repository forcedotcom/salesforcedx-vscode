// https://www.typescriptlang.org/tsconfig#extends
// The configuration from this file is loaded first, then overridden by those in the inheriting config file. But path-based compiler options (outDir, outFile, rootDir, include, exclude, files) are resolved from the config file they're found in. They cannot be extended (https://github.com/microsoft/TypeScript/issues/29172).
// Config ref: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html
{
  // https://github.com/microsoft/TypeScript/wiki/Node-Target-Mapping
  "extends": "@tsconfig/node22/tsconfig.json",
  "compilerOptions": {
    "composite": true,
    "target": "ES2023",
    "lib": ["es2023", "dom"],
    "module": "node16",
    "moduleResolution": "Node16",
    "esModuleInterop": false,
    "resolveJsonModule": true,
    "sourceMap": true,
    "types": ["jest", "node"],
    "declaration": true,
    "declarationMap": true,
    "preserveConstEnums": true,
    "noImplicitAny": true,
    // TODO: cleanup unknown usage in catch blocks and remove below setting
    "useUnknownInCatchVariables": false,
    "noUnusedLocals": true,
    "allowSyntheticDefaultImports": true
  }
}
