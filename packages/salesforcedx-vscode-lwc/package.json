{
  "name": "salesforcedx-vscode-lwc",
  "displayName": "Lightning Web Components",
  "description": "Provides code-editing features for Lightning Web Components",
  "qna": "https://github.com/forcedotcom/salesforcedx-vscode/issues",
  "bugs": {
    "url": "https://github.com/forcedotcom/salesforcedx-vscode/issues"
  },
  "repository": {
    "url": "https://github.com/forcedotcom/salesforcedx-vscode"
  },
  "icon": "images/VSCodeLWC.png",
  "galleryBanner": {
    "color": "#ECECEC",
    "theme": "light"
  },
  "version": "60.16.0",
  "publisher": "salesforce",
  "license": "BSD-3-Clause",
  "engines": {
    "vscode": "^1.82.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "dependencies": {
    "@salesforce/core": "7.3.10",
    "@salesforce/eslint-config-lwc": "3.5.1",
    "@salesforce/lightning-lsp-common": "4.8.0",
    "@salesforce/lwc-language-server": "4.8.0",
    "@salesforce/salesforcedx-utils-vscode": "60.16.0",
    "ajv": "6.12.6",
    "applicationinsights": "1.0.7",
    "jest-editor-support": "^30.1.0",
    "jest-regex-util": "^24.9.0",
    "rxjs": "^5.4.1",
    "strip-ansi": "^5.2.0",
    "uuid": "^3.3.3",
    "vscode-extension-telemetry": "0.0.17",
    "vscode-languageclient": "^5.2.1"
  },
  "devDependencies": {
    "@salesforce/salesforcedx-test-utils-vscode": "60.16.0",
    "@types/chai": "4.3.3",
    "@types/mocha": "^5",
    "@types/node": "^18.11.9",
    "@types/sinon": "^7.5.2",
    "@types/uuid": "^3.4.8",
    "@types/vscode": "^1.61.2",
    "@types/which": "^1.3.1",
    "@typescript-eslint/eslint-plugin": "6.9.0",
    "@typescript-eslint/parser": "6.9.0",
    "chai": "^4.0.2",
    "cross-env": "5.2.0",
    "esbuild": "^0.19.5",
    "esbuild-plugin-pino": "^2.1.0",
    "eslint": "8.52.0",
    "eslint-config-prettier": "9.0.0",
    "eslint-plugin-header": "3.1.1",
    "eslint-plugin-import": "2.29.0",
    "eslint-plugin-jest": "27.5.0",
    "eslint-plugin-jest-formatting": "3.1.0",
    "eslint-plugin-jsdoc": "46.8.2",
    "eslint-plugin-prefer-arrow": "1.2.3",
    "mocha": "^10",
    "mocha-junit-reporter": "^1.23.3",
    "mocha-multi-reporters": "^1.1.7",
    "nyc": "^15",
    "prettier": "3.0.3",
    "sinon": "^13.0.1",
    "sinon-chai": "^3.7.0",
    "ts-sinon": "^1.0.25",
    "typescript": "^5.2.2",
    "vscode-uri": "^1.0.8",
    "which": "1.3.1"
  },
  "extensionDependencies": [
    "dbaeumer.vscode-eslint",
    "salesforce.salesforcedx-vscode-core"
  ],
  "scripts": {
    "bundle:extension": "node ./esbuild.config.js",
    "vscode:prepublish": "npm prune --production",
    "vscode:package": "ts-node  ../../scripts/vsce-bundled-extension.ts",
    "vscode:sha256": "node ../../scripts/generate-sha256.js >> ../../SHA256",
    "vscode:publish": "node ../../scripts/publish-vsix.js",
    "compile": "tsc -p ./",
    "lint": "eslint .",
    "lint:fix": "npm run lint -- --fix",
    "watch": "tsc -watch -p .",
    "clean": "shx rm -rf node_modules && shx rm -rf out && shx rm -rf coverage && shx rm -rf .nyc_output",
    "test": "npm run test:unit && npm run test:vscode-integration",
    "test:unit": "jest --coverage",
    "test:vscode-integration": "node ../../scripts/download-vscode && node ../../scripts/install-vsix-dependencies dbaeumer.vscode-eslint && node ../../scripts/run-tests-with-recipes",
    "test:vscode-insiders-integration": "cross-env CODE_VERSION=insiders npm run test:vscode-integration"
  },
  "packaging": {
    "assets": [
      "LICENSE.txt",
      "package.nls.ja.json",
      "package.nls.json",
      "README.md",
      ".vscodeignore",
      "images",
      "resources",
      "snippets",
      "dist"
    ],
    "packageUpdates": {
      "main": "dist/index.js",
      "serverPath": [
        "node_modules",
        "@salesforce",
        "lwc-language-server",
        "lib",
        "server.js"
      ],
      "dependencies": {
        "@salesforce/core": "7.3.10",
        "@salesforce/lightning-lsp-common": "4.8.0",
        "@salesforce/lwc-language-server": "4.8.0",
        "@salesforce/source-tracking": "6.3.4",
        "applicationinsights": "1.0.7"
      },
      "devDependencies": {}
    }
  },
  "activationEvents": [
    "workspaceContains:sfdx-project.json",
    "workspaceContains:../workspace-user.xml",
    "workspaceContains:**/workspace-user.xml"
  ],
  "main": "./out/src",
  "serverPath": [
    "..",
    "..",
    "node_modules",
    "@salesforce",
    "lwc-language-server",
    "lib",
    "server.js"
  ],
  "contributes": {
    "snippets": [
      {
        "language": "javascript",
        "path": "./snippets/lwc-js.json"
      },
      {
        "language": "html",
        "path": "./snippets/lwc-html.json"
      }
    ],
    "views": {
      "test": [
        {
          "id": "sf.lightning.lwc.test.view",
          "when": "sf:project_opened || sf:internal_dev",
          "name": "%lightning_lwc_test_view_name%"
        }
      ]
    },
    "menus": {
      "editor/context": [
        {
          "command": "sf.lightning.lwc.preview",
          "when": "sf:project_opened && resource =~ /.*\\/lwc\\/[^\\/]+(\\/[^\\/]+\\.(html|css|js))?$/"
        }
      ],
      "editor/title": [
        {
          "command": "sf.lightning.lwc.test.editorTitle.run",
          "when": "sf:lwc_jest_file_focused",
          "group": "navigation"
        },
        {
          "command": "sf.lightning.lwc.test.editorTitle.debug",
          "when": "sf:lwc_jest_file_focused",
          "group": "navigation"
        },
        {
          "command": "sf.lightning.lwc.test.editorTitle.startWatching",
          "when": "sf:lwc_jest_file_focused && !sf:lwc_jest_is_watching_focused_file",
          "group": "navigation"
        },
        {
          "command": "sf.lightning.lwc.test.editorTitle.stopWatching",
          "when": "sf:lwc_jest_file_focused && sf:lwc_jest_is_watching_focused_file",
          "group": "navigation"
        }
      ],
      "editor/title/context": [
        {
          "command": "sf.lightning.lwc.preview",
          "when": "sf:project_opened && resource =~ /.*\\/lwc\\/[^\\/]+(\\/[^\\/]+\\.(html|css|js))?$/"
        }
      ],
      "view/title": [
        {
          "command": "sf.lightning.lwc.test.runAllTests",
          "when": "view == sf.lightning.lwc.test.view",
          "group": "navigation"
        },
        {
          "command": "sf.lightning.lwc.test.refreshTestExplorer",
          "when": "view == sf.lightning.lwc.test.view",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "sf.lightning.lwc.test.case.run",
          "title": "%lightning_lwc_test_case_run_text%",
          "when": "view == sf.lightning.lwc.test.view && viewItem =~ /(lwcTest)(_.*|\\b)/",
          "group": "inline"
        },
        {
          "command": "sf.lightning.lwc.test.case.debug",
          "title": "%lightning_lwc_test_case_debug_text%",
          "when": "view == sf.lightning.lwc.test.view && viewItem =~ /(lwcTest)(_.*|\\b)/",
          "group": "inline"
        },
        {
          "command": "sf.lightning.lwc.test.file.run",
          "title": "%lightning_lwc_test_file_run_text%",
          "when": "view == sf.lightning.lwc.test.view && viewItem =~ /(lwcTestGroup)(_.*|\\b)/",
          "group": "inline"
        },
        {
          "command": "sf.lightning.lwc.test.file.debug",
          "title": "%lightning_lwc_test_file_debug_text%",
          "when": "view == sf.lightning.lwc.test.view && viewItem =~ /(lwcTestGroup)(_.*|\\b)/",
          "group": "inline"
        }
      ],
      "explorer/context": [
        {
          "command": "sf.lightning.lwc.preview",
          "when": "sf:project_opened && resource =~ /.*\\/lwc\\/[^\\/]+(\\/[^\\/]+\\.(html|css|js))?$/"
        }
      ],
      "commandPalette": [
        {
          "command": "sf.lightning.lwc.start",
          "when": "sf:project_opened"
        },
        {
          "command": "sf.lightning.lwc.stop",
          "when": "sf:project_opened"
        },
        {
          "command": "sf.lightning.lwc.open",
          "when": "sf:project_opened"
        },
        {
          "command": "sf.lightning.lwc.preview",
          "when": "sf:project_opened && resource =~ /.*\\/lwc\\/[^\\/]+(\\/[^\\/]+\\.(html|css|js))?$/"
        },
        {
          "command": "sf.lightning.lwc.test.file.run",
          "when": "false"
        },
        {
          "command": "sf.lightning.lwc.test.file.debug",
          "when": "false"
        },
        {
          "command": "sf.lightning.lwc.test.case.run",
          "when": "false"
        },
        {
          "command": "sf.lightning.lwc.test.case.debug",
          "when": "false"
        },
        {
          "command": "sf.lightning.lwc.test.navigateToTest",
          "when": "false"
        },
        {
          "command": "sf.lightning.lwc.test.runAllTests",
          "when": "sf:project_opened || sf:internal_dev"
        },
        {
          "command": "sf.lightning.lwc.test.refreshTestExplorer",
          "when": "sf:project_opened || sf:internal_dev"
        },
        {
          "command": "sf.lightning.lwc.test.editorTitle.run",
          "when": "sf:lwc_jest_file_focused"
        },
        {
          "command": "sf.lightning.lwc.test.editorTitle.debug",
          "when": "sf:lwc_jest_file_focused"
        },
        {
          "command": "sf.lightning.lwc.test.editorTitle.startWatching",
          "when": "sf:lwc_jest_file_focused"
        },
        {
          "command": "sf.lightning.lwc.test.editorTitle.stopWatching",
          "when": "sf:lwc_jest_file_focused"
        },
        {
          "command": "sf.lightning.lwc.test.stopWatchingAllTests",
          "when": "sf:project_opened || sf:internal_dev"
        }
      ]
    },
    "commands": [
      {
        "command": "sf.lightning.lwc.start",
        "title": "%lightning_lwc_start_text%"
      },
      {
        "command": "sf.lightning.lwc.stop",
        "title": "%lightning_lwc_stop_text%"
      },
      {
        "command": "sf.lightning.lwc.open",
        "title": "%lightning_lwc_open_text%"
      },
      {
        "command": "sf.lightning.lwc.preview",
        "title": "%lightning_lwc_preview_text%"
      },
      {
        "command": "sf.lightning.lwc.test.runAllTests",
        "title": "%lightning_lwc_test_run_all_tests_text%",
        "icon": {
          "light": "resources/light/play-button.svg",
          "dark": "resources/dark/play-button.svg"
        }
      },
      {
        "command": "sf.lightning.lwc.test.refreshTestExplorer",
        "title": "%lightning_lwc_test_refresh_test_explorer_text%",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "sf.lightning.lwc.test.navigateToTest",
        "title": "%lightning_lwc_test_navigate_to_test%"
      },
      {
        "command": "sf.lightning.lwc.test.file.run",
        "title": "%lightning_lwc_test_file_run_text%",
        "icon": {
          "light": "resources/light/play-button.svg",
          "dark": "resources/dark/play-button.svg"
        }
      },
      {
        "command": "sf.lightning.lwc.test.file.debug",
        "title": "%lightning_lwc_test_file_debug_text%",
        "icon": {
          "light": "resources/light/debug.svg",
          "dark": "resources/dark/debug.svg"
        }
      },
      {
        "command": "sf.lightning.lwc.test.case.run",
        "title": "%lightning_lwc_test_case_run_text%",
        "icon": {
          "light": "resources/light/play-button.svg",
          "dark": "resources/dark/play-button.svg"
        }
      },
      {
        "command": "sf.lightning.lwc.test.case.debug",
        "title": "%lightning_lwc_test_case_debug_text%",
        "icon": {
          "light": "resources/light/debug.svg",
          "dark": "resources/dark/debug.svg"
        }
      },
      {
        "command": "sf.lightning.lwc.test.editorTitle.run",
        "title": "%lightning_lwc_test_run_current_file_text%",
        "icon": {
          "light": "resources/light/play-button.svg",
          "dark": "resources/dark/play-button.svg"
        }
      },
      {
        "command": "sf.lightning.lwc.test.editorTitle.debug",
        "title": "%lightning_lwc_test_debug_current_file_text%",
        "icon": {
          "light": "resources/light/debug.svg",
          "dark": "resources/dark/debug.svg"
        }
      },
      {
        "command": "sf.lightning.lwc.test.editorTitle.startWatching",
        "title": "%lightning_lwc_test_start_watching_text%",
        "icon": {
          "light": "resources/light/startWatching.svg",
          "dark": "resources/dark/startWatching.svg"
        }
      },
      {
        "command": "sf.lightning.lwc.test.editorTitle.stopWatching",
        "title": "%lightning_lwc_test_stop_watching_text%",
        "icon": {
          "light": "resources/light/stopWatching.svg",
          "dark": "resources/dark/stopWatching.svg"
        }
      },
      {
        "command": "sf.lightning.lwc.test.stopWatchingAllTests",
        "title": "%lightning_lwc_test_stop_watching_all_tests_text%"
      }
    ],
    "debuggers": [
      {
        "type": "vscode-lwc-tests",
        "label": "%lightning_lwc_debugger%",
        "languages": [
          "javascript"
        ],
        "configurationSnippets": [
          {
            "label": "%lightning_lwc_debugger%",
            "description": "%lightning_lwc_debugger_desc%",
            "body": {
              "name": "%lightning_lwc_debugger%",
              "type": "node",
              "request": "launch",
              "program": "^\"\\${workspaceFolder}/node_modules/.bin/sf-lwc-jest\"",
              "args": [
                "--",
                "--runInBand"
              ],
              "cwd": "^\"\\${workspaceFolder}\"",
              "console": "integratedTerminal",
              "internalConsoleOptions": "neverOpen",
              "disableOptimisticBPs": true,
              "windows": {
                "program": "^\"\\${workspaceFolder}/node_modules/@salesforce/sf-lwc-jest/bin/sf-lwc-jest\""
              }
            }
          }
        ]
      }
    ],
    "configuration": {
      "type": "object",
      "title": "%lightning_lwc_preferences%",
      "properties": {
        "salesforcedx-vscode-lwc.preview.rememberDevice": {
          "type": "boolean",
          "default": true,
          "description": "%lightning_lwc_remember_device_description%"
        },
        "salesforcedx-vscode-lwc.preview.logLevel": {
          "type": "string",
          "description": "%lightning_lwc_mobile_log_level%",
          "enum": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "warn"
        }
      }
    }
  }
}
